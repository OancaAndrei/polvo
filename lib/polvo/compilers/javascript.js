// Generated by CoffeeScript 1.6.2
(function() {
  var Coffeescript, XRegExp, cs, debug, error, log, path, warn, _ref;

  cs = require('coffee-script');

  path = require('path');

  XRegExp = require('xregexp').XRegExp;

  _ref = require('./../utils/log-util'), log = _ref.log, debug = _ref.debug, warn = _ref.warn, error = _ref.error;

  module.exports = Coffeescript = (function() {
    var AMD_WRAPPER;

    function Coffeescript() {}

    Coffeescript.NAME = 'javascript';

    Coffeescript.TYPE = 'javascript';

    Coffeescript.EXT = /\.(js)?$/m;

    AMD_WRAPPER = "/*\n  Assembled by Polvo\n*/\n~global_code\ndefine( ['require', 'exports', 'module'], function(require, exports, module)\n{\n~code\n})";

    Coffeescript.compile = function(file, after_compile) {
      var clean, contents, global_code, global_reg, global_res, raw;

      raw = file.raw;
      global_reg = XRegExp('\/\/>>\n(.*)\n\/\/<<', 's');
      global_res = XRegExp.exec(file.raw, global_reg);
      global_code = global_res != null ? global_res[1] : '';
      clean = raw.replace(global_code, '');
      contents = AMD_WRAPPER.replace('~code', this.reindent(clean));
      contents = contents.replace('~global_code', global_code);
      return after_compile(contents);
    };

    Coffeescript.translate_ext = function(filepath) {
      return filepath.replace(this.EXT, '.js');
    };

    Coffeescript.strip_ext = function(filepath) {
      return filepath.replace(this.EXT, '');
    };

    Coffeescript.reindent = function(code) {
      var indentation, match_indentation;

      match_indentation = /^(\s+).*$/mg;
      indentation = '';
      while ((indentation.match(/^[ \t]{2,}/m)) == null) {
        indentation = match_indentation.exec(code);
        if (indentation != null) {
          indentation = indentation[1];
        } else {
          indentation = "  ";
        }
      }
      indentation = indentation.replace(/[\r\n]/g, '');
      return code.replace(/^/mg, "" + indentation);
    };

    return Coffeescript;

  })();

}).call(this);

/*
//@ sourceMappingURL=javascript.map
*/
