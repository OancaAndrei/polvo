// Generated by CoffeeScript 1.6.3
(function() {
  var VendorsJS, debug, error, fs, fsu, log, path, warn, _ref,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  path = require('path');

  fs = require('fs');

  path = require('path');

  fsu = require('fs-util');

  _ref = require('../../utils/log-util'), log = _ref.log, debug = _ref.debug, warn = _ref.warn, error = _ref.error;

  module.exports = VendorsJS = (function() {
    function VendorsJS(polvo, cli, config, tentacle, optimizer) {
      this.polvo = polvo;
      this.cli = cli;
      this.config = config;
      this.tentacle = tentacle;
      this.optimizer = optimizer;
    }

    VendorsJS.prototype.merge_to_str = function() {
      var buffer, contents, match_define_calls, vname, vpath, _ref1;
      buffer = [];
      _ref1 = this.config.vendors.javascript;
      for (vname in _ref1) {
        vpath = _ref1[vname];
        if (vname === 'incompatible') {
          continue;
        }
        contents = fs.readFileSync(vpath, 'utf-8');
        if (!(__indexOf.call(this.config.vendors.javascript.incompatible, vname) >= 0)) {
          match_define_calls = /(define[\s]*\()[\s]*(function)/g;
          contents = contents.replace(match_define_calls, "$1'" + vname + "',$2");
        }
        buffer.push(contents);
      }
      return buffer.join('\n');
    };

    VendorsJS.prototype.copy_to_release = function(all, specific, log_time) {
      var from, paths, release_dir, release_path, to, vname, vurl, _ref1;
      if (all == null) {
        all = true;
      }
      if (specific == null) {
        specific = null;
      }
      if (log_time == null) {
        log_time = true;
      }
      paths = {};
      _ref1 = this.config.vendors.javascript;
      for (vname in _ref1) {
        vurl = _ref1[vname];
        if ((/^http/m.test(vurl)) || (vname === 'incompatible')) {
          continue;
        }
        if (all === false && vurl !== specific) {
          continue;
        }
        release_dir = path.join(this.config.destination, 'vendors');
        release_path = path.join(release_dir, "" + vname + ".js");
        paths[vname] = "vendors/" + vname;
        if (!fs.existsSync(release_dir)) {
          fsu.mkdir_p(release_dir);
        }
        fsu.cp(vurl, release_path);
        from = vurl.replace(this.polvo.basepath, '');
        to = release_path.replace(this.polvo.basepath, '');
        if (from[0] === path.sep) {
          from = from.substr(1);
        }
        if (to[0] === path.sep) {
          to = to.substr(1);
        }
        log(("âœ“ " + to).green);
      }
      return paths;
    };

    return VendorsJS;

  })();

}).call(this);

/*
//@ sourceMappingURL=vendors-js.map
*/
