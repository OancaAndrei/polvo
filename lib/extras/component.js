// Generated by CoffeeScript 1.10.0
var abs, comp_folder, components, config, dirs, filepath, find_manifests, fs, fsu, i, j, k, kind, kinds, len, len1, len2, manifest, manifest_path, manifests, name, path, ref, upath;

fs = require('fs');

path = require('path');

upath = require('upath');

fsu = require('fs-util');

dirs = require('../utils/dirs');

config = require('../utils/config');

module.exports = components = [];

find_manifests = function() {
  var base, components_folder, manifest, manifests;
  base = upath.join(dirs.pwd);
  while (base !== path.parse(base).root) {
    manifest = upath.join(base, 'component.json');
    if (fs.existsSync(manifest)) {
      components_folder = upath.join(base, 'components');
      if (fs.existsSync(components_folder)) {
        manifests = fsu.find(components_folder, /component\.json/);
        return manifests;
      }
    }
    base = upath.join(base, '..');
  }
  return [];
};

manifests = find_manifests();

for (i = 0, len = manifests.length; i < len; i++) {
  manifest_path = manifests[i];
  comp_folder = path.dirname(manifest_path);
  name = (manifest = require(manifest_path)).name;
  config.alias[name] = dirs.relative(comp_folder);
  kinds = 'styles scripts templates fonts files images'.split(' ');
  for (j = 0, len1 = kinds.length; j < len1; j++) {
    kind = kinds[j];
    if (manifest[kind] != null) {
      ref = manifest[kind];
      for (k = 0, len2 = ref.length; k < len2; k++) {
        filepath = ref[k];
        abs = upath.join(comp_folder, filepath);
        components.push(abs);
      }
    }
  }
}

//# sourceMappingURL=component.js.map
