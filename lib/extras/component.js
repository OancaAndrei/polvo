// Generated by CoffeeScript 1.6.3
var abs, comp_folder, components, config, dirs, filepath, find_manifests, fs, fsu, kind, kinds, manifest, manifest_path, manifests, name, path, _i, _j, _k, _len, _len1, _len2, _ref;

fs = require('fs');

path = require('path');

fsu = require('fs-util');

dirs = require('../utils/dirs');

config = require('../utils/config');

module.exports = components = [];

find_manifests = function() {
  var base, components_folder, manifest, manifests;
  base = path.join(dirs.pwd);
  while (base !== '/') {
    manifest = path.join(base, 'component.json');
    if (fs.existsSync(manifest)) {
      components_folder = path.join(base, 'components');
      if (fs.existsSync(components_folder)) {
        manifests = fsu.find(components_folder, /component\.json/);
        return manifests;
      }
    }
    base = path.join(base, '..');
  }
  return [];
};

manifests = find_manifests();

for (_i = 0, _len = manifests.length; _i < _len; _i++) {
  manifest_path = manifests[_i];
  comp_folder = path.dirname(manifest_path);
  name = (manifest = require(manifest_path)).name;
  config.alias[name] = dirs.relative(comp_folder);
  kinds = 'styles scripts templates fonts files images'.split(' ');
  for (_j = 0, _len1 = kinds.length; _j < _len1; _j++) {
    kind = kinds[_j];
    if (manifest[kind] != null) {
      _ref = manifest[kind];
      for (_k = 0, _len2 = _ref.length; _k < _len2; _k++) {
        filepath = _ref[_k];
        abs = path.join(comp_folder, filepath);
        components.push(abs);
      }
    }
  }
}

/*
//@ sourceMappingURL=component.map
*/
