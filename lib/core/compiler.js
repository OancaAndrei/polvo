// Generated by CoffeeScript 1.6.3
(function() {
  var config, dirs, files, filesize, fs, minify, prefix, save_css, save_js, sufix, _;

  _ = require('lodash');

  fs = require('fs');

  filesize = require('filesize');

  files = require('./files');

  dirs = require('../utils/dirs');

  config = require('../utils/config');

  minify = require('../utils/minify');

  prefix = ";(function(){\nfunction require(path, parent){\n  // console.log('::: require', path, parent);\n\n  if(parent)\n    path = require.mods[parent].aliases[path]\n  \n  var mod;\n  if(!(mod = require.mods[path]).exports)\n    mod.call(this, (mod.exports = {}), require.local(path), mod);\n\n  return mod.exports;\n}\n\nrequire.mods = {}\n\nrequire.local = function( path ){\n  return function( id ) { return require( id, path ); }\n}\n\nrequire.register = function(path, mod, aliases){\n  // console.log('::: registered', path);\n  require.mods[path] = mod;\n  mod.aliases = aliases;\n}\n";

  sufix = "})()";

  exports.build = function() {
    var fsize, relative;
    save_js();
    fsize = filesize((fs.statSync(config.output.js)).size);
    relative = dirs.relative(config.output.js);
    console.log(("✓ " + relative + " (" + fsize + ")").green);
    return save_css();
  };

  exports.minify = function() {
    var relative, size, uncompressed;
    save_js();
    uncompressed = fs.readFileSync(config.output.js);
    fs.writeFileSync(config.output.js, minify.js(uncompressed.toString()));
    size = filesize((fs.statSync(config.output.js)).size);
    relative = dirs.relative(config.output.js);
    console.log(("✓ " + relative + " (minified=" + size + ")").green);
    return save_css();
  };

  save_js = function() {
    var all, buffer, each, merged;
    all = _.filter(files.files, {
      type: 'js'
    });
    merged = ((function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = all.length; _i < _len; _i++) {
        each = all[_i];
        _results.push(each.wrapped);
      }
      return _results;
    })()).join('\n');
    buffer = prefix;
    buffer += "\n";
    buffer += merged;
    buffer += "\n";
    buffer += "require('" + config.boot + "');";
    buffer += "\n";
    buffer += sufix;
    return fs.writeFileSync(config.output.js, buffer);
  };

  save_css = function() {
    var all, each, merged, relative;
    all = _.filter(files.files, {
      type: 'css'
    });
    merged = ((function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = all.length; _i < _len; _i++) {
        each = all[_i];
        _results.push(each.compiled);
      }
      return _results;
    })()).join('\n');
    fs.writeFileSync(config.output.css, merged);
    relative = dirs.relative(config.output.css);
    return console.log(("✓ " + relative).green);
  };

}).call(this);

/*
//@ sourceMappingURL=compiler.map
*/
