// Generated by CoffeeScript 1.6.3
(function() {
  var File, fs, plugins, wrapper;

  fs = require('fs');

  plugins = require('../utils/plugins');

  wrapper = "require.register('~filepath', function(require, exports, module){\n~code\n});";

  module.exports = File = (function() {
    var get_compiler;

    File.prototype.raw = null;

    File.prototype.filepath = null;

    File.prototype.id = null;

    File.prototype.type = null;

    File.prototype.deps = null;

    File.prototype.uncompiled = null;

    File.prototype.compiled = null;

    File.prototype.map = null;

    File.prototype.compiled = null;

    File.prototype.src_map = null;

    File.prototype.compiler = null;

    function File(filepath) {
      this.filepath = filepath;
      this.deps = [];
      this.compiler = get_compiler();
      this.type = this.compiler.type;
      this.refresh();
    }

    File.prototype.refresh = function() {
      this.raw = fs.readFileSync(this.filepath, "utf-8");
      this.deps = [];
      return this.compile();
    };

    File.prototype.compile = function(done) {
      var _this = this;
      return this.compiler.compile(this.filepath, this.raw, function(compiled, map, uncompiled) {
        _this.map = map;
        _this.uncompiled = uncompiled;
        if (_this.type === 'css') {
          _this.compiled = compiled;
        } else if (_this.type === 'js') {
          _this.compiled = wrapper.replace('~filepath', _this.filepath);
          _this.compiled = _this.compiled.replace('~code', compiled);
        }
        return typeof done === "function" ? done(_this) : void 0;
      });
    };

    get_compiler = function() {
      var plugin;
      if ((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = plugins.length; _i < _len; _i++) {
          plugin = plugins[_i];
          _results.push(plugin.ext.test(this.filepath));
        }
        return _results;
      }).call(this)) {
        return plugin;
      }
    };

    return File;

  })();

}).call(this);

/*
//@ sourceMappingURL=file.map
*/
