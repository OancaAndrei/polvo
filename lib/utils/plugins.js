// Generated by CoffeeScript 1.10.0
(function() {
  var _, app_json, dirs, error, fs, get_plugin_manifest, info, path, plugins, ref, registered, scan, upath, util;

  _ = require('lodash');

  fs = require('fs');

  path = require('path');

  upath = require('upath');

  util = require('util');

  dirs = require('../utils/dirs');

  ref = require('../utils/logger')('utils/plugins'), error = ref.error, info = ref.info;

  plugins = [];

  registered = {};

  get_plugin_manifest = function(folder, plugin) {
    var manifest;
    manifest = upath.join(folder, 'node_modules', plugin, 'package.json');
    if (fs.existsSync(manifest)) {
      return manifest;
    }
    if (folder === upath.join(folder, '..')) {
      return null;
    }
    return get_plugin_manifest(upath.join(folder, '..'), plugin);
  };

  scan = function(folder) {
    var manifest, manifest_path, plugin, pmanifest, pmanifest_path, results;
    manifest_path = upath.join(folder, 'package.json');
    manifest = require(manifest_path);
    results = [];
    for (plugin in manifest.dependencies) {
      pmanifest_path = get_plugin_manifest(folder, plugin);
      if (pmanifest_path === null) {
        info("dependency '" + plugin + "' not installed, can\'t check if its a plugin");
        continue;
      }
      pmanifest = require(pmanifest_path);
      if (pmanifest.polvo && !registered[pmanifest.name]) {
        registered[pmanifest.name] = true;
        results.push(plugins.push(require(plugin)));
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  scan(upath.join(dirs.root));

  app_json = upath.join(dirs.pwd, 'package.json');

  if (fs.existsSync(app_json)) {
    scan(dirs.pwd);
  } else {
    info('app doesn\'t have a `package.json` file, loading built-in plugins only');
  }

  module.exports = plugins;

}).call(this);
