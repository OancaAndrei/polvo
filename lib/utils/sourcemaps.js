// Generated by CoffeeScript 1.6.3
var config, dirs, fs, map, path, section, sourcemaps;

path = require('path');

fs = require('fs');

dirs = require('./dirs');

config = require('./config');

map = "{\n  \"version\": 3,\n  \"file\": \"~FILE\",\n  \"sections\": [\n    ~SECTIONS\n  ]\n}";

section = "{\n  \"offset\": {\n    \"line\":~LINE,\n    \"column\":0\n  },\n  \"map\": {\n    \"version\": 3,\n    \"file\": \"app.js\",\n    \"sources\": [\"~SOURCE\"],\n    \"sourcesContent\": [\"~SOURCE-CONTENT\"],\n    \"names\": [],\n    \"mappings\": \"~MAPS\"\n  }\n}";

sourcemaps = null;

exports.assemble = function(files) {
  var buffer, clean_raw, file, sbuffer, sections, _i, _len;
  buffer = map.replace('~FILE', path.basename(config.output.js));
  sections = [];
  for (_i = 0, _len = files.length; _i < _len; _i++) {
    file = files[_i];
    if (!(file.source_map != null)) {
      continue;
    }
    clean_raw = file.raw;
    clean_raw = clean_raw.replace(/\\/g, '\\\\');
    clean_raw = clean_raw.replace(/"/g, '\\"');
    clean_raw = clean_raw.replace(/\n/g, '\\n');
    sbuffer = section.replace('~SOURCE', dirs.relative(file.filepath));
    sbuffer = sbuffer.replace('~LINE', file.source_map_offset);
    sbuffer = sbuffer.replace('~MAPS', JSON.parse(file.source_map).mappings);
    sbuffer = sbuffer.replace('~SOURCE-CONTENT', clean_raw);
    sections.push(sbuffer);
  }
  return sourcemaps = buffer.replace('~SECTIONS', sections.join(',\n'));
};

exports.get_assembled = function() {
  return sourcemaps;
};

exports.get_assembled_64 = function() {
  return new Buffer(sourcemaps).toString('base64');
};

/*
//@ sourceMappingURL=sourcemaps.map
*/
