// Generated by CoffeeScript 1.6.3
var colors, dirs, log_to_stderr, log_to_stdout, util,
  __slice = [].slice;

util = require('util');

colors = require('colors');

dirs = null;

log_to_stdout = function(args) {
  var msg;
  args = [].concat(args);
  if (typeof __stdout !== "undefined" && __stdout !== null) {
    msg = args.join(' ');
    if ((typeof __nocolor !== "undefined" && __nocolor !== null) && __nocolor) {
      msg = msg.stripColors;
    }
    return __stdout(msg);
  } else {
    return console.log.apply(null, args);
  }
};

log_to_stderr = function(args) {
  var msg;
  args = [].concat(args);
  if (typeof __stderr !== "undefined" && __stderr !== null) {
    msg = args.join(' ');
    if ((typeof __nocolor !== "undefined" && __nocolor !== null) && __nocolor) {
      msg = msg.stripColors;
    }
    return __stderr(msg);
  } else {
    return console.error.apply(null, args);
  }
};

module.exports = function(alias) {
  if (alias == null) {
    alias = '';
  }
  dirs = require('./dirs');
  return {
    error: function() {
      var args, msg;
      msg = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return log_to_stderr(['error'.bold.red, msg.grey].concat(args));
    },
    warn: function() {
      var args, msg;
      msg = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return log_to_stderr(['warn'.bold.yellow, msg.grey].concat(args));
    },
    info: function() {
      var args, msg;
      msg = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return log_to_stdout(['info'.bold.cyan, msg.grey].concat(args));
    },
    debug: function() {
      var args, msg;
      msg = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      args = ['debug'.magenta, msg.grey].concat(args);
      if (alias !== '') {
        args.unshift(alias.inverse);
      }
      return log_to_stdout(args);
    },
    log: function() {
      var args, msg;
      msg = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return log_to_stdout([msg].concat(args));
    },
    file: {
      created: function(filepath) {
        return log_to_stdout(("+ " + (dirs.relative(filepath))).green);
      },
      changed: function(filepath) {
        return log_to_stdout(("• " + (dirs.relative(filepath))).yellow);
      },
      deleted: function(filepath) {
        return log_to_stdout(("- " + (dirs.relative(filepath))).red);
      },
      compiled: function(filepath) {
        return log_to_stdout(("✓ " + (dirs.relative(filepath))).cyan);
      }
    }
  };
};

/*
//@ sourceMappingURL=logger.map
*/
