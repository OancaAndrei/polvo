// Generated by CoffeeScript 1.6.3
(function() {
  var Cli, colors, optimist, original_argv, version;

  optimist = require('optimist');

  version = require('./utils/version');

  colors = require('colors');

  original_argv = process.argv;

  module.exports = Cli = (function() {
    var examples, optimis, usage;

    Cli.prototype.argv = null;

    Cli.prototype.options = null;

    optimis = null;

    usage = null;

    examples = null;

    function Cli() {
      this.configure();
      this.init();
      this.argv = optimis.argv;
    }

    Cli.prototype.configure = function() {
      usage = "Polvo " + ('v' + version).grey + "\n" + 'Polyvalent cephalopod mollusc'.grey + "\n\n" + 'Usage:' + "\n  polvo [" + 'options'.green + "] [" + 'params'.green + "]";
      return examples = "Examples:\n  polvo -c\n  polvo -cs\n  polvo -w\n  polvo -ws\n  polvo -wsf custom-config-file.yml";
    };

    Cli.prototype.help = function() {
      return "" + (optimis.help()) + "\n" + examples;
    };

    Cli.prototype.init = function() {
      var injection, key, val;
      injection = [];
      for (key in cli_options) {
        val = cli_options[key];
        injection.push(key.length === 1 ? "-" + key : "--" + key);
        injection.push("" + val);
      }
      process.argv = original_argv.concat(injection);
      return optimis = optimist(process.argv).usage(usage).alias('w', 'watch').boolean('w').describe('w', "Start watching/compiling in dev mode").alias('c', 'compile').boolean('c').describe('c', "Compile project in development mode").alias('r', 'release').boolean('r').describe('r', "Compile project in release mode").alias('s', 'server').boolean('s').describe('s', "Serves project statically, options in config file").alias('f', 'config-file').string('f').describe('f', "Path to a different config file").describe('stdio', 'Pipe stdio when forking `polvo` as a child process').string('f').describe('base', 'Path to app\'s root folder (when its not the current)').string('base').alias('v', 'version').boolean('v').describe('v', 'Show Polvo\'s version').alias('h', 'help').boolean('h').describe('h', 'Shows this help screen');
    };

    return Cli;

  })();

}).call(this);

/*
//@ sourceMappingURL=cli.map
*/
