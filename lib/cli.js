// Generated by CoffeeScript 1.6.3
var colors, examples, key, optimist, optimistic, options, usage, val, version, _ref;

optimist = require('optimist');

colors = require('colors');

version = require('./utils/version');

usage = "Polvo " + ('v' + version).grey + "\n" + 'Polyvalent cephalopod mollusc'.grey + "\n\n" + 'Usage:' + "\n  polvo [" + 'options'.green + "] [" + 'params'.green + "]";

examples = "Examples:\n  polvo -c\n  polvo -cs\n  polvo -w\n  polvo -ws\n  polvo -wsf custom-config-file.yml";

if (typeof cli_options !== "undefined" && cli_options !== null) {
  options = [];
  _ref = cli_options || {};
  for (key in _ref) {
    val = _ref[key];
    options.push(key.length === 1 ? "-" + key : "--" + key);
    options.push("" + val);
  }
} else {
  options = process.argv.slice(0);
}

optimistic = optimist(options).usage(usage).alias('w', 'watch').boolean('w').describe('w', "Start watching/compiling in dev mode").alias('c', 'compile').boolean('c').describe('c', "Compile project in development mode").alias('r', 'release').boolean('r').describe('r', "Compile project in release mode").alias('s', 'server').boolean('s').describe('s', "Serves project statically, options in config file").alias('f', 'config-file').string('f').describe('f', "Path to a different config file").alias('b', 'base').describe('b', 'Path to app\'s root folder (when its not the current)').string('b').alias('x', 'split').describe('x', 'Compile files individually - useful for tests coverage').boolean('x').alias('v', 'version').boolean('v').describe('v', 'Show Polvo\'s version').alias('h', 'help').boolean('h').describe('h', 'Shows this help screen');

exports.argv = optimistic.argv;

exports.help = function() {
  return "" + (optimistic.help()) + "\n" + examples;
};

/*
//@ sourceMappingURL=cli.map
*/
